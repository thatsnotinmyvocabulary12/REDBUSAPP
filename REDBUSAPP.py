{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "872410e0-c128-4a21-a5c5-d5a5e492a863",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: streamlit in d:\\ananconda navi\\lib\\site-packages (1.32.0)\n",
      "Requirement already satisfied: altair<6,>=4.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (5.0.1)\n",
      "Requirement already satisfied: blinker<2,>=1.0.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (1.6.2)\n",
      "Requirement already satisfied: cachetools<6,>=4.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (5.3.3)\n",
      "Requirement already satisfied: click<9,>=7.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (8.1.7)\n",
      "Requirement already satisfied: numpy<2,>=1.19.3 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (1.26.4)\n",
      "Requirement already satisfied: packaging<24,>=16.8 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (23.2)\n",
      "Requirement already satisfied: pandas<3,>=1.3.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (2.2.2)\n",
      "Requirement already satisfied: pillow<11,>=7.1.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (10.3.0)\n",
      "Requirement already satisfied: protobuf<5,>=3.20 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (3.20.3)\n",
      "Requirement already satisfied: pyarrow>=7.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (14.0.2)\n",
      "Requirement already satisfied: requests<3,>=2.27 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (2.32.2)\n",
      "Requirement already satisfied: rich<14,>=10.14.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (13.3.5)\n",
      "Requirement already satisfied: tenacity<9,>=8.1.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (8.2.2)\n",
      "Requirement already satisfied: toml<2,>=0.10.1 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (0.10.2)\n",
      "Requirement already satisfied: typing-extensions<5,>=4.3.0 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (4.11.0)\n",
      "Requirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (3.1.37)\n",
      "Requirement already satisfied: pydeck<1,>=0.8.0b4 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (0.8.0)\n",
      "Requirement already satisfied: tornado<7,>=6.0.3 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (6.4.1)\n",
      "Requirement already satisfied: watchdog>=2.1.5 in d:\\ananconda navi\\lib\\site-packages (from streamlit) (4.0.1)\n",
      "Requirement already satisfied: jinja2 in d:\\ananconda navi\\lib\\site-packages (from altair<6,>=4.0->streamlit) (3.1.4)\n",
      "Requirement already satisfied: jsonschema>=3.0 in d:\\ananconda navi\\lib\\site-packages (from altair<6,>=4.0->streamlit) (4.19.2)\n",
      "Requirement already satisfied: toolz in d:\\ananconda navi\\lib\\site-packages (from altair<6,>=4.0->streamlit) (0.12.0)\n",
      "Requirement already satisfied: colorama in d:\\ananconda navi\\lib\\site-packages (from click<9,>=7.0->streamlit) (0.4.6)\n",
      "Requirement already satisfied: gitdb<5,>=4.0.1 in d:\\ananconda navi\\lib\\site-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.7)\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in d:\\ananconda navi\\lib\\site-packages (from pandas<3,>=1.3.0->streamlit) (2.9.0.post0)\n",
      "Requirement already satisfied: pytz>=2020.1 in d:\\ananconda navi\\lib\\site-packages (from pandas<3,>=1.3.0->streamlit) (2024.1)\n",
      "Requirement already satisfied: tzdata>=2022.7 in d:\\ananconda navi\\lib\\site-packages (from pandas<3,>=1.3.0->streamlit) (2023.3)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in d:\\ananconda navi\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in d:\\ananconda navi\\lib\\site-packages (from requests<3,>=2.27->streamlit) (3.7)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in d:\\ananconda navi\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2.2.2)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in d:\\ananconda navi\\lib\\site-packages (from requests<3,>=2.27->streamlit) (2024.7.4)\n",
      "Requirement already satisfied: markdown-it-py<3.0.0,>=2.2.0 in d:\\ananconda navi\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.2.0)\n",
      "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in d:\\ananconda navi\\lib\\site-packages (from rich<14,>=10.14.0->streamlit) (2.15.1)\n",
      "Requirement already satisfied: smmap<5,>=3.0.1 in d:\\ananconda navi\\lib\\site-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.0)\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in d:\\ananconda navi\\lib\\site-packages (from jinja2->altair<6,>=4.0->streamlit) (2.1.3)\n",
      "Requirement already satisfied: attrs>=22.2.0 in d:\\ananconda navi\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (24.2.0)\n",
      "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in d:\\ananconda navi\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2023.7.1)\n",
      "Requirement already satisfied: referencing>=0.28.4 in d:\\ananconda navi\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.30.2)\n",
      "Requirement already satisfied: rpds-py>=0.7.1 in d:\\ananconda navi\\lib\\site-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.10.6)\n",
      "Requirement already satisfied: mdurl~=0.1 in d:\\ananconda navi\\lib\\site-packages (from markdown-it-py<3.0.0,>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.0)\n",
      "Requirement already satisfied: six>=1.5 in d:\\ananconda navi\\lib\\site-packages (from python-dateutil>=2.8.2->pandas<3,>=1.3.0->streamlit) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install streamlit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "dbbde600-a5f7-44c3-918c-7c64a466bb8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# importing libraries\n",
    "import pandas as pd\n",
    "import mysql.connector\n",
    "import streamlit as slt\n",
    "from streamlit_option_menu import option_menu\n",
    "import plotly.express as px\n",
    "import time\n",
    "\n",
    "# kerala bus\n",
    "lists_k=[]\n",
    "df_k=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_k.csv\")\n",
    "for i,r in df_k.iterrows():\n",
    "    lists_k.append(r[\"Route_name\"])\n",
    "\n",
    "#Andhra bus\n",
    "lists_A=[]\n",
    "df_A=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_A.csv\")\n",
    "for i,r in df_A.iterrows():\n",
    "    lists_A.append(r[\"Route_name\"])\n",
    "\n",
    "#Telungana bus\n",
    "lists_T=[]\n",
    "df_T=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_T.csv\")\n",
    "for i,r in df_T.iterrows():\n",
    "    lists_T.append(r[\"Route_name\"])\n",
    "\n",
    "#Goa bus\n",
    "lists_g=[]\n",
    "df_G=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_G.csv\")\n",
    "for i,r in df_G.iterrows():\n",
    "    lists_g.append(r[\"Route_name\"])\n",
    "\n",
    "#Rajastan bus\n",
    "lists_R=[]\n",
    "df_R=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_R.csv\")\n",
    "for i,r in df_R.iterrows():\n",
    "    lists_R.append(r[\"Route_name\"])\n",
    "\n",
    "\n",
    "# South bengal bus \n",
    "lists_SB=[]\n",
    "df_SB=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_SB.csv\")\n",
    "for i,r in df_SB.iterrows():\n",
    "    lists_SB.append(r[\"Route_name\"])\n",
    "\n",
    "# Haryana bus\n",
    "lists_H=[]\n",
    "df_H=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_H.csv\")\n",
    "for i,r in df_H.iterrows():\n",
    "    lists_H.append(r[\"Route_name\"])\n",
    "\n",
    "#Assam bus\n",
    "lists_AS=[]\n",
    "df_AS=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_AS.csv\")\n",
    "for i,r in df_AS.iterrows():\n",
    "    lists_AS.append(r[\"Route_name\"])\n",
    "\n",
    "#UP bus\n",
    "lists_UP=[]\n",
    "df_UP=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_UP.csv\")\n",
    "for i,r in df_UP.iterrows():\n",
    "    lists_UP.append(r[\"Route_name\"])\n",
    "\n",
    "#West bengal bus\n",
    "lists_WB=[]\n",
    "df_WB=pd.read_csv(r\"D:\\MSP REDBUS PROJECT\\df_WB.csv\")\n",
    "for i,r in df_WB.iterrows():\n",
    "    lists_WB.append(r[\"Route_name\"])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "c3f3a908-3e40-4e41-bc8b-7d15e3d76008",
   "metadata": {},
   "outputs": [],
   "source": [
    "#setting up streamlit page\n",
    "slt.set_page_config(layout=\"wide\")\n",
    "import streamlit as st\n",
    "from streamlit_option_menu import option_menu\n",
    "web = option_menu(\n",
    "    menu_title=\"üöå OnlineBus\",\n",
    "    options=[\"Home\", \"üìçStates and Routes\"],\n",
    "    icons=[\"house\", \"map\"],\n",
    "    orientation=\"horizontal\"\n",
    ")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "13ab2d7a-6ce1-4afb-9fcf-a6ad7ab1d0bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "# Route lists\n",
    "route_lists = {\n",
    "    \"Kerala\": lists_k,\n",
    "    \"Adhra Pradesh\": lists_A,\n",
    "    \"Telugana\": lists_T,\n",
    "    \"Goa\": lists_g,\n",
    "    \"Rajastan\": lists_R,\n",
    "    \"South Bengal\": lists_SB,\n",
    "    \"Haryana\": lists_H,\n",
    "    \"Assam\": lists_AS,\n",
    "    \"Uttar Pradesh\": lists_UP,\n",
    "    \"West Bengal\": lists_WB,\n",
    "}\n",
    "\n",
    "# Function to query bus details based on selection\n",
    "def query_bus_details(state, route, bus_type, fare_range, start_time):\n",
    "    conn = mysql.connector.connect(host=\"localhost\", user=\"root\", password=\"\", database=\"RED_BUS_DATA\")\n",
    "    my_cursor = conn.cursor()\n",
    "\n",
    "    # Define fare range\n",
    "    if fare_range == \"50-1000\":\n",
    "        fare_min, fare_max = 50, 1000\n",
    "    elif fare_range == \"1000-2000\":\n",
    "        fare_min, fare_max = 1000, 2000\n",
    "    else:\n",
    "        fare_min, fare_max = 2000, 100000\n",
    "\n",
    "    # Define bus type condition\n",
    "    if bus_type == \"sleeper\":\n",
    "        bus_type_condition = \"Bus_type LIKE '%Sleeper%'\"\n",
    "    elif bus_type == \"semi-sleeper\":\n",
    "        bus_type_condition = \"Bus_type LIKE '%A/c Semi Sleeper %'\"\n",
    "    else:\n",
    "        bus_type_condition = \"Bus_type NOT LIKE '%Sleeper%' AND Bus_type NOT LIKE '%Semi-Sleeper%'\"\n",
    "\n",
    "    query = f'''\n",
    "        SELECT * FROM bus_details \n",
    "        WHERE Price BETWEEN {fare_min} AND {fare_max}\n",
    "        AND Route_name = \"{route}\"\n",
    "        AND {bus_type_condition} \n",
    "        AND Start_time >= '{start_time}'\n",
    "        ORDER BY Price, Start_time DESC\n",
    "    '''\n",
    "    my_cursor.execute(query)\n",
    "    out = my_cursor.fetchall()\n",
    "    conn.close()\n",
    "\n",
    "    df = pd.DataFrame(out, columns=[\n",
    "        \"ID\", \"Bus_name\", \"Bus_type\", \"Start_time\", \"End_time\", \"Total_duration\",\n",
    "        \"Price\", \"Seats_Available\", \"Ratings\", \"Route_link\", \"Route_name\"\n",
    "    ])\n",
    "    return df\n",
    "\n",
    "# Home page setting\n",
    "if web == \"Home\":\n",
    "    slt.image(r\"C:\\Users\\91934\\Desktop\\MOVIES\\bus logo.jpg\", width=200)\n",
    "    slt.title(\"Redbus Data Scraping with Selenium & Dynamic Filtering using Streamlit\")\n",
    "    slt.subheader(\":blue[Domain:]  Transportation\")\n",
    "    slt.subheader(\":blue[Objective:] \")\n",
    "    slt.markdown(\"The 'Redbus Data Scraping and Filtering with Streamlit Application'...\")\n",
    "    slt.subheader(\":blue[Overview:]\")\n",
    "    slt.markdown(\"Selenium: ...\")\n",
    "    slt.markdown(\"Pandas: ...\")\n",
    "    slt.markdown(\"MySQL: ...\")\n",
    "    slt.markdown(\"Streamlit: ...\")\n",
    "    slt.subheader(\":blue[Skill-take:]\")\n",
    "    slt.markdown(\"Selenium, Python, Pandas, MySQL, mysql-connector-python, Streamlit.\")\n",
    "    slt.subheader(\":blue[Developed-by:]  Mugesh Surya Pradeep\")\n",
    "\n",
    "# States and Routes page setting\n",
    "if web == \"üìçStates and Routes\":\n",
    "    state = slt.selectbox(\"Lists of States\", list(route_lists.keys()))\n",
    "    route = slt.selectbox(\"List of routes\", route_lists[state])\n",
    "    \n",
    "    col1, col2 = slt.columns(2)\n",
    "    with col1:\n",
    "        bus_type = slt.radio(\"Choose bus type\", (\"sleeper\", \"semi-sleeper\", \"others\"))\n",
    "    with col2:\n",
    "        fare_range = slt.radio(\"Choose bus fare range\", (\"50-1000\", \"1000-2000\", \"2000 and above\"))\n",
    "\n",
    "    start_time = slt.time_input(\"Select the time\")\n",
    "    start_time_str = start_time.strftime('%H:%M:%S')  # Convert to appropriate SQL time format\n",
    "\n",
    "    # Query and display results\n",
    "    df_result = query_bus_details(state, route, bus_type, fare_range, start_time_str)\n",
    "    slt.dataframe(df_result)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "5558b40e-8ef1-4134-9df2-9a0407b2f3d3",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
